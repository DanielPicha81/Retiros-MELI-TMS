<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cuadros Interactivos</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
        }
        .container {
            display: grid;
            grid-template-columns: repeat(6, 1fr);
            grid-gap: 20px;
            margin-top: 20px;
        }
        .box {
            width: 100px;
            height: 100px;
            background-color: black;
            color: white;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: center;
            text-align: center;
            cursor: pointer;
            user-select: none;
            position: relative;
            padding: 10px;
            border-radius: 10px;
            box-sizing: border-box;
        }
        .box.green {
            background-color: green;
        }
        .box[contenteditable="true"] {
            outline: none;
        }
        .time-container {
            margin: 20px;
            font-size: 24px;
        }
        .counter {
            font-size: 12px;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="time-container">
        Hora: <span id="time">00:00</span>
    </div>
    <div class="container" id="boxes">
        <!-- Los cuadros se generarán aquí con JavaScript -->
    </div>
    <script>
        // Generar 30 cuadros
        const container = document.getElementById('boxes');
        for (let i = 1; i <= 30; i++) {
            const box = document.createElement('div');
            box.className = 'box';
            box.contentEditable = 'true';
            box.innerHTML = `Cuadro ${i}<div class="counter">00:00</div>`;
            box.addEventListener('click', function() {
                this.classList.toggle('green');
                const counter = this.querySelector('.counter');
                if (this.classList.contains('green')) {
                    startCounter(this, counter);
                } else {
                    stopCounter(this, counter);
                }
                // Actualizar el contenido en localStorage
                updateLocalStorage();
            });
            container.appendChild(box);
        }

        // Medidor de tiempo
        function updateTime() {
            const now = new Date();
            const hours = String(now.getHours()).padStart(2, '0');
            const minutes = String(now.getMinutes()).padStart(2, '0');
            document.getElementById('time').textContent = `${hours}:${minutes}`;
        }

        setInterval(updateTime, 1000);
        updateTime(); // Inicializar el tiempo inmediatamente

        // Contadores individuales para cada cuadro
        function startCounter(box, counter) {
            const startTime = new Date();
            box.timer = setInterval(() => {
                const now = new Date();
                const elapsedTime = new Date(now - startTime);
                const minutes = String(elapsedTime.getMinutes()).padStart(2, '0');
                const seconds = String(elapsedTime.getSeconds()).padStart(2, '0');
                counter.textContent = `${minutes}:${seconds}`;
                // Actualizar el contenido en localStorage
                updateLocalStorage();
            }, 1000);
        }

        function stopCounter(box, counter) {
            clearInterval(box.timer);
            counter.textContent = '00:00';
            // Actualizar el contenido en localStorage
            updateLocalStorage();
        }

        // Función para guardar el estado en localStorage
        function updateLocalStorage() {
            const boxes = document.querySelectorAll('.box');
            const boxStates = [];
            boxes.forEach(box => {
                const isGreen = box.classList.contains('green');
                const text = box.childNodes[0].textContent;
                const counter = box.querySelector('.counter').textContent;
                boxStates.push({ isGreen, text, counter });
            });
            localStorage.setItem('boxStates', JSON.stringify(boxStates));
        }
    </script>
</body>
</html>
